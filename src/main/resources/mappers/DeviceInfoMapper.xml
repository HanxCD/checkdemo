<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.check.mapper.DeviceInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.check.domain.DeviceInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="deviceName" jdbcType="VARCHAR" property="deviceName" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="areaCode" jdbcType="VARCHAR" property="areaCode" />
    <result column="vendor" jdbcType="VARCHAR" property="vendor" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="coverCity" jdbcType="VARCHAR" property="coverCity" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, deviceName, province, city, areaCode, vendor ,version ,coverCity
  </sql>
  <select id="selectByExample" parameterType="com.example.check.domain.DeviceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByDeviceName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_info
    where deviceName = #{deviceName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByDeviceName" parameterType="java.lang.Integer">
    delete from device_info
    where deviceName = #{deviceName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.check.domain.DeviceInfoExample">
    delete from device_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.check.domain.DeviceInfo">
    insert into device_info (id, deviceName, province, city, areaCode, vendor ,version, coverCity)
    values (#{id,jdbcType=INTEGER}, #{deviceName,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR},
    #{city,jdbcType=VARCHAR}, #{areaCode,jdbcType=VARCHAR}, #{vendor,jdbcType=VARCHAR},
    #{version,jdbcType=VARCHAR},#{coverCity,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.check.domain.DeviceInfo">
    insert into device_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceName != null">
        deviceName,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="areaCode != null">
        areaCode,
      </if>
      <if test="vendor != null">
        vendor,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="coverCity != null">
        coverCity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="vendor != null">
        #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="coverCity != null">
        #{coverCity,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.check.domain.DeviceInfoExample" resultType="java.lang.Long">
    select count(*) from device_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceName != null">
        deviceName = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null">
        areaCode = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.vendor != null">
        vendor = #{record.vendor,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.coverCity != null">
        coverCity = #{record.coverCity,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_info
    set id = #{record.id,jdbcType=INTEGER},
    	deviceName = #{record.deviceName,jdbcType=VARCHAR},
      	province = #{record.province,jdbcType=VARCHAR},
      	city = #{record.city,jdbcType=VARCHAR},
      	areaCode = #{record.areaCode,jdbcType=VARCHAR},
      	vendor = #{record.vendor,jdbcType=VARCHAR},
      	version = #{record.version,jdbcType=VARCHAR},
      	coverCity = #{record.coverCity,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.check.domain.DeviceInfo">
    update device_info
    <set>
      <if test="deviceName != null">
        deviceName = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        areaCode = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="vendor != null">
        vendor = #{vendor,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="coverCity != null">
        coverCity = #{coverCity,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.check.domain.DeviceInfo">
    update device_info
    set 
      deviceName = #{record.deviceName,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      areaCode = #{record.areaCode,jdbcType=VARCHAR},
      vendor = #{record.vendor,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      coverCity = #{record.coverCity,jdbcType=VARCHAR},
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByDeviceName" parameterType="com.example.check.domain.DeviceInfo">
    update device_info
    set 
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      areaCode = #{record.areaCode,jdbcType=VARCHAR},
      vendor = #{record.vendor,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      coverCity = #{record.coverCity,jdbcType=VARCHAR},
    where deviceName = #{record.deviceName,jdbcType=VARCHAR}
  </update>
</mapper>